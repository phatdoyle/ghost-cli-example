/** AUTOGENERATED CODE BY GHOSTGRAPH CODEGEN **/

// SPDX-License-Identifier: MIT
pragma solidity 0.8.19;

import "./gen_schema.sol";
import "./gen_events.sol";
import { EventDetails } from "./gen_helpers.sol";

enum GhostEventName {
    numberChanged,
    numberReset,
    Transfer,
    Approval,
    OwnershipTransferred
}

interface IGhostGraph {
    function getGlobalMetrics(string memory id) external returns (GlobalMetrics memory);
    function getTransfer(bytes32 id) external returns (Transfer memory);
    function getNumberChanged(string memory id) external returns (NumberChanged memory);
    function saveGlobalMetrics(GlobalMetrics memory globalMetrics) external returns (bool);
    function saveTransfer(Transfer memory transfer) external returns (bool);
    function saveNumberChanged(NumberChanged memory numberChanged) external returns (bool);
    function registerHandle(address addr) external returns (bool);
    function registerFactory(address addr, GhostEventName eventName, string memory param) external returns (bool);
    
    // helper methods
    function ghostToString(address value) external returns (string memory);
    function ghostToString(bytes calldata value) external returns (string memory);
    function ghostToString(bytes32 value) external returns (string memory);
    function ghostToString(bool value) external returns (string memory);
    function ghostToString(uint256 value) external returns (string memory);
    function ghostToString(int256 value) external returns (string memory);
    function ghostIsContract(address addr) external returns (bool);
}

contract GhostGraph {

    IGhostGraph public constant graph = IGhostGraph(address(0x0011223344));
}